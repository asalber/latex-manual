[
  {
    "objectID": "introduccion.html",
    "href": "introduccion.html",
    "title": "1  Introducción",
    "section": "",
    "text": "\\(\\TeX\\) es un sistema de composición de documentos de alta calidad, orientado especialmente a la creación de documentos científicos y técnicos que incluyen fórmulas matemáticas. Fue creado por Donald Knuth en 1978.\nA diferencia de un procesador de textos como por ejemplo Microsoft Word, \\(\\TeX\\) no es una aplicación sino un lenguaje de programación que require compilar el código fuente para obtener el documento final. Esto, que a priori podría parecer una desventaja, en realidad es la gran ventaja de \\(\\TeX\\) frente a los procesadores de texto que siguen el paradigma WYSIWYG (What You See Is What You Get), ya que permite separar fácilmente el contenido y la estructura de un documento, de su formato, de manera que el usuario puede centrarse en el contenido y la estructura del documento, y dejar que \\(\\TeX\\) se encargue del formato. De hecho, \\(\\TeX\\) incorpora un potente lenguaje de marcado para estructurar y formatear el texto de un documento. Por ejemplo, mientras que para poner una palabra en negrita con un procesador de textos como Microsoft Word, bastaría con seleccionar la palabra y hacer clic en el botón de negrita para ver automáticamente la palabra en negrita en la pantalla del ordenador, en \\(\\TeX\\) habría que escribir en el fichero con el código fuente {\\bf palabra} y después compilar el código fuente para obtener un documento final con la palabra en negrita (el comando \\bf, que permite aplicar la negrita, se conoce como marca o tag en inglés.)\nLa página principal con información sobre \\(\\TeX\\) es la del TeX Users Group."
  },
  {
    "objectID": "introduccion.html#instalación-y-primeros-pasos",
    "href": "introduccion.html#instalación-y-primeros-pasos",
    "title": "1  Introducción",
    "section": "1.3 Instalación y Primeros Pasos",
    "text": "1.3 Instalación y Primeros Pasos\nPara empezar, LaTeX es Software Libre y multiplataforma lo que le permitirá disponer de una instalación local de cualquier distribución de LaTeX adaptada convenientemente para el sistema operativo de su preferencia. Aunque la instalación varía considerablente de un sistema operativo a otro todo lo contenido en este curso es completamente funcional en cualquier instalación de LaTeX y aunque por preferencia trabaje con uno o dos editores específicos, todo ha de funcionar en cualquiera sea el editor de su elección porque LaTeX no depende del editor utilizado y con eso ya he mencionado una de las enormes cualidades y ventajas de utilizar LaTeX como editor de texto: siempre podrá trabajar en sus documentos sin importar que no disponga del mismo sistema operativo o de algún editor en particular (eso sí, tendrá que asegurarse de contar con los paquetes adecuados).\n\n1.3.1 Instalación\nRealmente la instalación es un paso tan simple como elegir el editor con el que quiera trabajar y ya estará listo, yo recomiendo [TexMaker][4] porque se trata de un editor libre, multiplataforma, con muchos asistentes disponibles, visualizador de la estructura del código, previsualizador en tiempo real de la salida en pdf y un gran número de etceteras los cuales puede conocer en la página oficial del proyecto arriba enladazada, la segunda opción que yo recomiendo es [Texstudio][5] que parece un clon de TexMaker pero con muchos más asistentes, obviamente estos dos no son los únicos y seguramente que para muchos, tampoco los mejores.\nLa instalación de alguno de estos editores en una distribución de GNU/Linux basada en Debian puede hacerse desde los repositorios:\n#apt-get install texmaker\no bien\n#apt-get install texstudio\nCualquiera sea el caso del sistema operativo en el que se este haciendo la instalación hay que diferenciar claramente entre el editor y la distribución. El editor, básicamente, es cualquier editor de texto plano, claro, los editores especializados en LaTeX incluyen muchas otras características tales como la incorporación del compilador o incluso el visor del pdf generado. La distribución depende básicamente del sistema operativo en el que trabaje, texlive en el caso de GNU / Linux, Texniccenter en el caso de Windows; de cualquier forma, puede esperar que al instalar el editor a la vez se instale la distribución adecuada a sus sistema.\nExisten también otras alternativas tales como un editor web de LaTeX y así no tener que hacer ninguna instalación en sus máquinas, [ShareLaTeX][6] que además es un repositorio de plantillas LaTeX de todo tipo de documentos, así como [Overleaf][14] son una brillante alternativa, o si lo suyo es el código puro y duro siempre puede utilizar [GNU Emacs][7], en fin, alternativas de editores hay para cada gusto.\n\n\n1.3.2 Hola Universo LaTeX\n¿Qué otra mejor manera de empezar en ’‘El Universo LaTeX’’?. Pues bien, para poder hacerlo bien, lo primero es hacerlo con ortografía. Los diccionarios para corrección ortográfica son una herramienta fundamental así es que empezaremos por instalarnos los diccionarios necesarios.\n\nDescargar el diccionario de su preferencia, un buen repositorio de diccionarios es el de [WPS Community][8].\nDespués de tener el diccionario ya descargado tendrá que descomprimirlo y copiar los archivos .dic y .aff en /usr/share/myspell/dicts, bien puede copiar la carpeta completa siempre que tenga presente el nombre de ésta para configurar el TexMaker (o cualquiera que sea su editor). De estos dos archivos, el primero es el diccionario propiamente dicho y el segundo es el encargado de resaltar las palabras erróneas.\nPara configurar su TexMaker (editor) para utilizar el diccionario, en el menú ++O++pciones elija la opción Configurar Texmaker y luego el apartado editor, especifique la dirección de ubicación del diccionario tal como se muestra en la imágen.  Con lo anterior ya podrá disponer de diccionarios en su editor de LaTeX y (por lo menos en el caso de Texmaker) será tan fácil usarlos como utilizar la combinación Shift + Ctrl + F7 para ver las palabras erróneas subrayadas en color rojo.\n\n\n1.3.2.1 Ahora si a decir “Hola Universo LaTeX”\nAlgún día llegaremos a construir documentos propios y completamente desde cero, pero esa no es la mejor entrada al universo LaTeX, así es que la manera en que vamos a entrar en el universo LaTeX es a través del uso de plantillas, léase por plantilla un documento pre - formateado en el cual simplemente se modifica el contenido y la forma no es necesario tocarla.\nPara empezar, trabajaremos sobre una plantilla para cartas.\nComo ya lo mencioné, Overleaf tiene un importante [repositorio de plantillas][9] disponibles para descarga gratuita y la mayoría bajo los términos de licencias libres como la LPPL, CC-By-SA, etc. claro, el repositorio de plantillas de ShareLaTeX no es el único, otro buen repositorio es el de [latextemplates.com][10] aunque al parecer a éste hace un buen tiempo que no le hacen aportes nuevos. También [Overleaf][11] es (además de un editor LaTeX en línea con más funcionalidades en su versión gratuita que ShareLaTeX) un buen repositorio donde encontrar cientos de plantillas. En fin, en esta oportunidad vamos a utilizar la [plantilla Moderncv Casual][12] de ShareLaTeX, esta plantilla puede cargarse en el editor en línea de ShareLaTeX o bien descargarla en un archivo .zip, aquí se seguirá la edición a partir de la versión descargada en zip.\n\n\n\nPlantilla para cartas\n\n\nUna vez descargada la plantilla y descomprimido el contenido del archivo zip correspondiente se dispondrá de los archivos de estilo que definen el color y la distribución del contenido (archivos de extensión .sty) y del archivo main.tex que es la carta propiamente dicha. Como recomendación, es bueno copiar este archivo con un nombre específico para cada carta y así dejar la plantilla original sin modificar y poder entonces utilizarla cada vez que sea necesario.\nEl idioma original de la plantilla es el inglés por tanto, si va a escribir en español tendrá que hacer algunos ajustes a la plantilla o bien utilizar la versión traducida hecha por este servidor y disponible [aquí para su descarga][13].\nPues muy bien, para empezar es más que suficiente que ya pueda escribir todas sus cartas en LaTeX. Simplemente renombre el archivo main.tex (sin cambiarlo de ubicación), ábralo con el editor de LaTeX de su elección y siga las instrucciónes, la plantilla es completamente auto - explicada. En el caso de estar utilizando Texmaker puede compilar y ver el resultado en pdf simplemente accionando la tecla F1. Tenga presente que no es necesario que abra o modifique todos los demás archivos, por ahora solamente necesita modificar el contenido de la carta en el archivo .tex correspondiente, ya luego aprenderá a revisar y modificar los archivos de estilo.\nLic. Fausto Mauricio Lagos Suárez Mg. Ingeniería Computacional y Matemáticas @piratax007\n[1]: [2]: https://www.latex-project.org/lppl.txt [3]: https://www.gnu.org/philosophy/free-sw.html [4]: http://www.xm1math.net/texmaker/ [5]: http://www.texstudio.org/ [6]: https://es.sharelatex.com/ [7]: https://www.gnu.org/software/emacs/ [8]: http://wps-community.org/download/dicts [9]: https://es.sharelatex.com/templates [10]: http://www.latextemplates.com/ [11]: https://www.overleaf.com/latex/templates/ [12]: https://es.sharelatex.com/templates/cover-letters/moderncv-casual [13]: https://drive.google.com/file/d/0B3grR36BkHEFZlQwdk1yMkY3VVk/view?usp=sharing [14]: https://www.overleaf.com"
  },
  {
    "objectID": "introduccion.html#qué-es-latex",
    "href": "introduccion.html#qué-es-latex",
    "title": "1  Introducción",
    "section": "1.2 ¿Qué es \\(\\LaTeX\\)",
    "text": "1.2 ¿Qué es \\(\\LaTeX\\)\n\n\\(\\LaTeX\\) es un conjunto de macros para \\(\\TeX\\) debido originalmente a Leslie Lamport para facilitar el uso de \\(\\TeX\\).\nTanto \\(\\TeX\\) como \\(\\LaTeX\\) son programas de código abierto, liberados bajo la licencia LPPL.\nOtra de las grandes ventajas de \\(\\LaTeX\\) es que existen multitud de paquetes de código libre para generar distintos tipos de documentos que pueden descargarse desde el repositorio CRAN.\nLa página principal sobre \\(\\LaTeX\\) es The LaTeX project."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Manual de LaTeX",
    "section": "",
    "text": "Bienvenidos al manual de \\(\\LaTeX\\)."
  },
  {
    "objectID": "introduccion.html#instalación",
    "href": "introduccion.html#instalación",
    "title": "1  Introducción",
    "section": "1.3 Instalación",
    "text": "1.3 Instalación\nExisten distintas distribuciones de \\(\\LaTeX\\) y algunas de ellas son multiplataforma, es decir, están disponibles para diferentes sistemas operativos. Las distribuciones más comunes son:\n\n\\(\\TeX\\)Live para Windows, Mac OSX y Linux.\nMiK\\(\\TeX\\) para Windows, Mac OSX y Linux.\nMac\\(\\TeX\\) para Mac OSX.\n\nEn sus respectivas páginas está explicado el procedimiento de instalación de cada una.\nJunto a la distribución de \\(\\LaTeX\\) es también habitual instalar algún editor de texto para escribir el código fuente. En realidad puede usarse cualquier editor de texto que ya esté instalado en nuestro sistema operativo, pero los existen entornos de edición especializados que facilitan muchas de las tareas del proceso de composición de documentos con \\(\\LaTeX\\). Los más comunes son:\n\nTexMaker. Es un editor de texto libre, multiplataforma, con muchos asistentes disponibles que permite previsualizar en tiempo real el documento final en pdf\nTexstudio. Es otro editor libre y multiplataforma que incorpora aún más asistentes que el anterior.\nVim Es un editor de texto simple de propósito general que también es libre y multiplataforma. Incorpora paquetes o plugins específicos para facilitar la creación de documentos con \\(\\LaTeX\\). Especialmente indicado para trabajar desde la terminal.\nEmacs. Es otro editor similar a Vim, muy extendido entre los usuarios que prefieren usar la terminal.\nVisual Studio Code. Es un potente entorno de desarrollo multipropósito. Dispone de paquetes para los lenguajes de programación más comunes, entre ellos \\(\\LaTeX\\).\n\nPero también se puede empezar a componer documentos sin necesidad de instalar nada en el ordenador, usando un editor on-line como por ejemplo Overleaf"
  },
  {
    "objectID": "introduccion.html#hola-latex",
    "href": "introduccion.html#hola-latex",
    "title": "1  Introducción",
    "section": "1.4 Hola LaTeX",
    "text": "1.4 Hola LaTeX\nA modo de ejemplo, empezaremos por crear un sencillo documento con el texto “Hola \\(\\LaTeX\\)”.\nPara ello utilizaremos nuestro editor de texto preferido para crear un fichero de texto con el nombre main.tex y el siguiente contenido:\n\\documentclass{article}\n\\usepackage[spanish]{babel}\n\\begin{document}\nHola \\LaTeX\n\\end{document}\n\n\n\n\n\n\nImportante\n\n\n\nEl nombre del fichero de texto con el código fuente de \\(\\LaTeX\\) puede ser el que queramos, pero es importante que la extensión sea .tex,\n\n\nAunque más adelante se verá la estructura general del código fuente de un documento en \\(\\LaTeX\\), a continuación se explica brevemente el contenido de este fichero:\n\nEn la primera línea se especifica el tipo de documento (article).\nEn la segunda línea se especifica el idioma del documento (spanish).\nLa tercera línea marca el comienzo del documento.\nLa cuarta línea contiene el texto del documento. \\LaTeX es un comando que produce la salida \\(\\LaTeX\\).\nLa quinta línea marca el final del documento.\n\n\n1.4.1 Compilación\nPara obtener el documento final hay que compilar el fichero fuente. Existen diferentes formas de hacerlo y en los editores anteriores suele ser tan sencillo como hacer clic en un botón o pulsar una combinación de teclas, pero en última instancia todos ellos hacen una llamada al compilador de \\(\\LaTeX\\) que es quien se encarga de convertir el código fuente en el documento final.\nCada distribución de \\(\\LaTeX\\) viene con varios compiladores. Los más habituales son:\n\nlatex: Es el compilador más antiguo y genera documentos en formato dvi, que es un formato independiente creado mucho antes que el formato pdf.\npdflatex: Es el compilador más usado y genera documentos en formato pdf.\nxelatex: Es un compilador más moderno que admite caracteres Unicode en el código fuente y el uso de tipografías más modernas.\n\nEn una terminal, la compilación de este documento sería tecleando el comando latex main.tex, pdflatex main.tex o xelatex main.tex, dependiendo del compilador que se quiera usar. A continuación se muestra la salida que general el compilador pdflatex al compilar el fichero main.tex.\n> pdflatex main.tex \ns is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2021) (preloaded format=pdflatex)\n restricted \\write18 enabled.\nentering extended mode\n(./main.tex\nLaTeX2e <2021-06-01> patch level 1\nL3 programming layer <2021-06-18>\n(/usr/local/texlive/2021/texmf-dist/tex/latex/base/article.cls\nDocument Class: article 2021/02/12 v1.4n Standard LaTeX document class\n(/usr/local/texlive/2021/texmf-dist/tex/latex/base/size10.clo))\n(/usr/local/texlive/2021/texmf-dist/tex/generic/babel/babel.sty\n(/usr/local/texlive/2021/texmf-dist/tex/generic/babel/babel.def\n(/usr/local/texlive/2021/texmf-dist/tex/generic/babel/txtbabel.def))\n(/usr/local/texlive/2021/texmf-dist/tex/generic/babel-spanish/spanish.ldf))\n(/usr/local/texlive/2021/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def)\n(./main.aux) [1{/usr/local/texlive/2021/texmf-var/fonts/map/pdftex/updmap/pdfte\nx.map}] (./main.aux) )</usr/local/texlive/2021/texmf-dist/fonts/type1/public/am\nsfonts/cm/cmr10.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/public/amsf\nonts/cm/cmr7.pfb>\nOutput written on main.pdf (1 page, 20106 bytes).\nTranscript written on main.log.\nEn la Figura 1.1 se puede apreciar el documento final que se obtiene tras compilar el código fuente en Overleaf.\n\n\n\nFigura 1.1: Creación de un documento en Overleaf."
  },
  {
    "objectID": "estructura.html",
    "href": "estructura.html",
    "title": "2  Estructura de un documento",
    "section": "",
    "text": "El esqueleto básico del código fuente de un documento en español para compilar con latex o pdflatex es el siguiente:\n% CLASE\n\\documentclass[a4paper,10pt]{article}\n\n% PREÁMBULO\n% Paquetes\n\\usepackage[utf8]{inputenc}\n\\usepackage[spanish]{babel}\n\\usepackage[T1]{fontenc}\n\n% Título, autor y fecha\n\\title{Título}\n\\author{Autor}\n\\date{Fecha}\n\n% CUERPO\n\\begin{document}\n\n\\maketitle\n\n% Resumen\n\\begin{abstract}\nResumen\n\\end{abstract}\n\n% Tabla de contenidos\n\\tableofcontents\n\nContenido del documento\n\n\\end{document}\nAntes de explicar las distintas partes de este esqueleto conviene mencionar varias cosas sobre la sintaxis de algunos elementos básicos:\n\nComandos: Los comandos comienzan siempre por la barra invertida (backslash) \\. En muchas ocasiones van acompañados de argumentos obligatorios que se escriben entre llaves {...} y opcionales que se escriben entre corchetes [...].\nEntornos: Los entornos, a diferencia de los comandos, son bloques de código sobre los que se aplica alguna acción, y están delimitados siempre por un comando de apertura \\begin{entorno} y otro de cierre \\end{entorno}.\nComentarios: Al igual que en otros lenguajes del programación se pueden hacer comentarios en el código fuente que no serán interpretados por el compilador. Para ello se utiliza el símbolo de porcentaje % al comienzo del comentario.\nSímbolos reservados: Existe una serie de símbolos que están reservados para funciones especiales.\n\n\\: Indica el inicio de un comando.\n$: Declara el entorno matemático.\n{ }: Inicia y finaliza un grupo.\n#: Indica el número de un argumento en la definición de comandos.\n%: Indica el inicio de un comentarios.\n&: Separa elementos en una tabla o fórmula.\n^: Escribe un superíndice.\n_, Escribe un subíndice.\n~, Indica por dónde se puede partir una palabra al final de una línea.\n\n\nPara que aparezcan estos caracteres en el documento final es necesario escribirlos en el código fuente precedidos por la barra invertida (\\$, \\{, \\}, \\#, \\%, \\&, \\^, \\_, \\~) excepto la barra invertida que se escribe con el comando \\backslash.\nA continuación se explican las partes del esqueleto anterior.\n\n\nLa primera línea de un fichero con código \\(\\LaTeX\\) indica la clase de documento que se va a generar mediante el comando \\documentclass. En el ejemplo aparece un argumento obligatorio que indica el tipo de documento que se desea crear, artículo (article), pero se pueden crear otros tipos de documentos como informes (report), libros (book) o cartas (letter). . Y también aparecen dos argumentos opcionales, a4paper que indica el tamaño de la hoja en el documento final (a4), y 10pt que indica el tamaño base de la fuente utilizada en el documento (existe también 11pt y 12pt).\n\n\n\nEl preámbulo es la parte que va después de la clase y antes del comienzo del cuerpo del documento. En parte suele utilizarse para la carga de los paquetes de macros que se van a utilizar en el documento y la configuración del documento. En el ejemplo el preámbulo comienza con la carga de tres paquetes mediante el comando \\usepackage: el paquete inputenc que permite definir la codificación de los caracteres del código fuente (conviene utilizar la codificación utf8 sobre todo si se van a utilizar caracteres no ASCII); el paquete babel que permite definir el idioma del documento (spanish); y el paquete fontenc que especifique las codificaciones1 de las fuentes (T1).\nA continuación, se suelen configurar algunos aspectos del documento como podrían ser los márgenes, encabezados y pies, el título, autor y fecha, y otras muchas posibilidades.\nEn el preámbulo también se pueden definir nuevos comandos \\(\\LaTeX\\) o redefinir los ya existentes.\n\n\n\nContiene el texto del cuerpo del documento y tiene que ir dentro del entorno document. Suele empezar con el comando \\maketitle si se desea empezar el documento con el título, autor y fecha que se hayan definido previamente en el preámbulo, y le sigue el comando \\tableofcontents que introduce la tabla de contenidos en el documento. Finalmente iría el texto en sí con el contenido del documento."
  },
  {
    "objectID": "estructura.html#esqueleto-básico-para-xelatex",
    "href": "estructura.html#esqueleto-básico-para-xelatex",
    "title": "2  Estructura de un documento",
    "section": "2.2 Esqueleto básico para xelatex",
    "text": "2.2 Esqueleto básico para xelatex\nSi se va a utilizar el compilador xelatex los paquetes del preámbulo cambian y deberían utilizarse los siguientes:\n% Paquetes\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}\n\\usepackage{polyglossia}\n\\setdefaultlanguage{spanish}\nEl paquete fontspec permite definir las fuentes tipográfica que se desean utilizar en el documento final (por ejemplo Times New Roman), que debe estar instalada en el sistema donde se compile el documento, y el paquete polyglossia permite definir el idioma del documento.\nEn la Figura 2.1 se puede apreciar el documento final que se obtiene tras compilar el código anterior con xelatex en Overleaf.\n\n\n\nFigura 2.1: Estructura básica de un documento."
  },
  {
    "objectID": "secciones.html",
    "href": "secciones.html",
    "title": "3  Secciones y párrafos",
    "section": "",
    "text": "Normalmente un documento extenso se dividirá en secciones y subsecciones (o incluso capítulos si se trata de un libro). Para definir las secciones de un documento se utilizan los siguientes comandos:\n\n\\chapter{Título del capítulo}. Crea un nuevo capítulo con el título indicado y lo numera. Solo puede usarse cuando la clase del documento es book.\n\\section{Título de la sección}. Crea una nueva sección con el título indicado y la numera.\n\\subsection{Título de la subsección}. Crea una nueva subsección con el título indicado y la numera.\n\\subsubsection{Título de la subsubsección}. Crea una nueva subsubsección con el título indicado y la numera.\n\nLas secciones definidas con estos documentos aparecerán en la tabla de contenidos automáticamente.\nExisten versiones alternativas de estos comandos añadiendo un asterisco (\\chapter*, \\section*, \\subsection*, \\subsubsection*) que crean encabezados de sección sin numerar y que tampoco aparecerán en la tabla de contenidos.\nEjemplo\n\\documentclass[a4paper, 10pt]{article}\n...\n% CUERPO\n\\begin{document}\n\\tableofcontents\n\n\\section{Sección primera}\nTexto de la sección.\n\n\\subsection{Subsección primera}\nTexto de la subsección.\n\n% Encabezado de subsección sin numerar\n\\subseccion*{Subsección segunda}\nTexto de la subsección.\n\n\\subsection{Subsección tercera}\nTexto de la subsección.\n\n\\section{Sección segunda}\nTexto de la sección.\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "secciones.html#párrafos-y-cambios-de-línea",
    "href": "secciones.html#párrafos-y-cambios-de-línea",
    "title": "3  Secciones y párrafos",
    "section": "3.2 Párrafos y cambios de línea",
    "text": "3.2 Párrafos y cambios de línea\nPara crear un párrafo nuevo basta dejar una o más líneas en blanco.\nSi se quiere hacer un cambio de línea dentro de un mismo párrafo, se utiliza el comando \\newline o \\\\.\nEjemplo\n% CUERPO\n\\begin{document}\nEste es el primer párrafo del documento, con un \\\\\ncambio de linea.\n\nEste es el segundo párrafo del documento. Obsérvese que cada vez que se comienza un párrafo la primera línea de desplaza un poco hacia la derecha. Esto se conoce como \\emph{sangría}.\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "secciones.html#justificación",
    "href": "secciones.html#justificación",
    "title": "3  Secciones y párrafos",
    "section": "3.3 Justificación",
    "text": "3.3 Justificación\nLos párrafos se justifican por defecto a la izquierda y a la derecha. \\(\\LaTeX\\) utiliza un algoritmo que permite partir las palabras al final de una línea para obtener párrafos con una buena estética (sin grandes espacios en blanco entre palabras). Pero también se pueden justificar solo a la izquierda, solo a la derecha o centrados entre los márgenes. Para ello se utilizan los siguientes entornos:\n\nflushleft: Justifica el texto a la izquierda.\nflushright: Justifica el texto a la derecha.\ncenter: Justifica el texto centrado entre los márgenes.\n\n% CUERPO\n\\begin{document}\nEste es el primer párrafo del documento, y aparece justificado a ambos lados (márgenes izquierdo y derecho) por defecto. Para que las líneas tengan la misma longitud, se utiliza un algoritmo que permite partir las palabras al final de una línea.\n\n\\begin{flushleft}\nEste es el segundo párrafo del documento y aparece justificado a la izquierda, es decir alineado con el margen izquierdo del documento. Obsérvese que no todas las líneas acaban a la misma altura.\n\\end{flushleft}\n\n\\begin{flushright}\nEste es el tercer párrafo del documento y aparece justificado a la derecha, es decir alineado con el margen derecho del documento. Obsérvese que no todas las líneas empiezan a la misma altura.\n\\end{flushright}\n\n\\begin{center}\nEste es el último párrafo del documento y aparece justificado en el centro entre los márgenes del documento. Obsérvese que ahora las líneas no empiezan ni terminan a la misma altura. \n\\end{center}\n\\end{document}\n\n\n\n\n\n\nSalida\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdvertencia\n\n\n\nEl algoritmo para partir palabras al final de una línea funciona muy bien, pero si alguna vez divide mal una palabra, se puede indicar por dónde partir la palabra con el comando \\- (por ejemplo si\\-la\\-ba)."
  },
  {
    "objectID": "formateo.html",
    "href": "formateo.html",
    "title": "4  Formateo básico",
    "section": "",
    "text": "Existen multitud de comandos para dar formato al texto de un documento, pero en esta sección nos limitaremos a los más importantes."
  },
  {
    "objectID": "formateo.html#negrita-cursiva-y-subrayado",
    "href": "formateo.html#negrita-cursiva-y-subrayado",
    "title": "4  Formateo básico",
    "section": "4.1 Negrita, cursiva y subrayado",
    "text": "4.1 Negrita, cursiva y subrayado\nPara resaltar un texto habitualmente se utiliza negrita, cursiva o subrayado. Estos formatos se aplican con los siguientes comandos:\n\n\\textbf{...}: Pone el texto en negrita.\n\\textit{...}: Pone el texto en cursiva o itálica.\nemph{...}: Enfatiza el texto cambiando de estilo (si estamos en un entorno de cursiva pasa a normal y si estamos en un entorno de texto normal pasa a cursiva).\n\\underline{...}: Subraya el texto.\n\nEjemplo\n% CUERPO\n\\begin{document}\nEste texto está en \\textbf{negrita}, este en \\textit{cursiva} y este \\underline{subrayado}. \n\n\\textit{Este texto está \\emph{enfatizado}}.\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "formateo.html#familias-de-tipos-de-letra",
    "href": "formateo.html#familias-de-tipos-de-letra",
    "title": "4  Formateo básico",
    "section": "4.2 Familias de tipos de letra",
    "text": "4.2 Familias de tipos de letra\nExisten tres tipos de letra que se activan con los siguientes comandos:\n\n\\texrm{...}: Texto normal (con serif). Es el tipo por defecto.\n\\texsf{...}: Texto sin adornos (sin serif)\n\\texttt{...}: Texto de máquina de escribir o monoespaciado (caracteres con la misma anchura).\n\nEjemplo\n% CUERPO\n\\begin{document}\nEste texto es normal, \\textsf{este es sin adornos}, \\texttt{y este de máquina de escribir}.\n\\end{document}\n\n\n\n\n\n\nSalida\n\n\n\n\n\n\n\n\n\nEn el preámbulo del documento se puede seleccionar la fuente a utilizar para cada uno de ellos, especialmente con el paquete fontspec para compilar con xelatex. Para ello se utilizan los siguientes comandos:\n\n\\setromanfont{Fuente normal}: Establece la fuente para el tipo de letra normal.\n\\setsansfont{Fuente sin adorno}: Establece la fuente para el tipo de letra sin adorno.\n\\setmonofont{Fuente monoespaciada}: Establece la fuente para el tipo de letra monoespaciado.\n\n\n\n\n\n\n\nPrecaución\n\n\n\nLas fuentes utilizadas en un documento deben estar previamente instaladas en el sistema operativo donde se compile el documento.\n\n\nEjemplo\n% PREÁMBULO\n\\usepackage{fontspec}\n\\setromanfont{Times New Roman}\n\\setsansfont{Arial}\n\\setmonofont{Courier New}\n\n% CUERPO\n\\begin{document}\nEste texto es normal, \\textsf{este es sin adornos}, \\texttt{y este de máquina de escribir}.\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "formateo.html#perfiles-de-letra",
    "href": "formateo.html#perfiles-de-letra",
    "title": "4  Formateo básico",
    "section": "4.3 Perfiles de letra",
    "text": "4.3 Perfiles de letra\nPara cada tipo de letra existen también varios perfiles que se activan con los siguientes comandos:\n\n\\textup{...}: Activa el perfil recto. Es el perfil por defecto.\n\\textit{...}: Activa el perfil de letra itálica.\n\\textsl{...}: Activa el perfil inclinado.\n\\textsc{...}: Activa el perfil de letra versalita (mayúsculas pequeñas).\n\nEjemplo\n% CUERPO\n\\begin{document}\nTexto normal con perfil recto, \\textit{itálica}, \\textsl{inclinado} y \\textsc{versalita}.\n\n\\textsf{Texto sin adorno con perfil recto, \\textit{itálica}, \\textsl{inclinado} y \\textsc{versalita}.}\n\n\\texttt{Texto monoespaciado con perfil recto, \\textit{itálica}, \\textsl{inclinado} y \\textsc{versalita}.}\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "formateo.html#tamaños-de-letra",
    "href": "formateo.html#tamaños-de-letra",
    "title": "4  Formateo básico",
    "section": "4.4 Tamaños de letra",
    "text": "4.4 Tamaños de letra\nA diferencia de otros procesadores donde el tamaño de la fuente se indica en puntos o pixels, en \\(\\LaTeX\\) existen 10 tamaños predefinidos que se activan con los siguientes comandos, de menor a mayor tamaño:\n\n\\tiny\n\\scriptsize\n\\footnotesize\n\\small\n\\normalsize\n\\large\n\\Large\n\\LARGE\n\\huge\n\\Huge\n\nExisten paquetes que permiten definir tamaños más pequeños o mayores pero no suelen ser necesarios en un documento normal.\nEjemplo\n% CUERPO\n\\begin{document}\n\\tiny{tiny}\n\\scriptsize{scripsize} \n\\footnotesize{footnotesize}\n\\small{small}\n\\normalsize{normalsize}\n\\large{large} \n\\Large{Large}\n\\LARGE{LARGE}\n\\huge{huge}\n\\Huge{Huge}\n\\end{document}\n\n\n\n\n\n\nSalida"
  },
  {
    "objectID": "tablas.html",
    "href": "tablas.html",
    "title": "6  Tablas",
    "section": "",
    "text": "Para crear una tabla se utiliza el entorno tabular. Este entorno tiene como argumento obligatorio el número de columnas de la tabla y su justificación, que se indica con una letra: l izquierda, r derecha y c centrada, (por ejemplo lcr indica tres columnas, la primera justificada a la izquierda, la segunda centrada y la tercera justificada a la derecha).\nA continuación se introduce el contenido de la tabla, separando las filas con el comando de cambio de línea \\\\ y dentro de cada línea separando las celdas con el comando &.\nEjemplo\n% CUERPO\n\\begin{document}\n% Tabla con tres columnas, justificadas a la izquierda, centrada y derecha, respectivamente.\n\\begin{tabular}{lcr}\nNombre & Ciudad & Edad \\\\\nMaría & Valencia & 22 \\\\\nJuan & Madrid & 50 \\\\\nCarmen & Barcelona & 35 \\\\\n\\end{tabular}\n\\end{document}\n\n\n\n\n\n\nSalida\n\n\n\n\n\n\n\n\n\nPara añadir líneas de división entre columnas, se introduce el carácter de barra vertical | entre las letras que definen la justificación de las columnas en el argumento obligatorio del entorno tabular. Mientras que para añadir líneas de división entre filas, se utiliza el comando \\hline al principio de cada línea. Se insertarán tantas líneas divisorias como veces se introduzca el comando \\hline.\nEjemplo\n% CUERPO\n\\begin{document}\n% Tabla con líneas divisorias de filas y columnas.\n\\begin{tabular}{|l|c|r|}\n\\hline\nNombre & Ciudad & Edad \\\\ \n\\hline\n\\hline\nMaría & Valencia & 22 \\\\\n\\hline\nJuan & Madrid & 50 \\\\\n\\hline\nCarmen & Barcelona & 35 \\\\\n\\hline\n\\end{tabular}\n\\end{document}\n\n\n\n\n\n\nSalida\n\n\n\n\n\n\n\n\n\nEl comando \\multicolumn{num}{col}{texto} permite crear celdas que se extienden a lo largo de varias columnas, donde num es el número de columnas a ocupar, col es el carácter que define la justificación de la celda (l, r o c), y texto es el contenido de la celda.\nTambién es posible utilizar el comando \\cline{n-m} para dibujar líneas horizontales divisorias que no abarquen toda la fila, sino desde la columna n hasta la m.\nEjemplo\n% CUERPO\n\\begin{document}\n\\begin{tabular}{lrrcrr}\n\\hline\n & \\multicolumn{2}{c}{Enero} & & \\multicolumn{2}{c}{Febrero}\\\\\n\\cline{2-3}\\cline{5-6}\nCiudad & Ingresos & Gastos & & Ingresos & Gastos\\\\ \n\\hline\nMadrid & 2500 & 1750 & & 2600 & 1800\\\\ \nBarcelona & 2250 & 1500 & & 2400 & 1650\\\\ \n\\hline\n\\end{tabular}\n\\end{document}\n\n\n\n\n\n\nSalida"
  }
]